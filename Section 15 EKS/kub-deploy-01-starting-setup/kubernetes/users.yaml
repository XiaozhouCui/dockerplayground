kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: efs-sc
provisioner: efs.csi.aws.com
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: efs-pv
spec:
  capacity:
    storage: 5Gi
  volumeMode: Filesystem # for EFS
  accessModes:
    - ReadWriteMany
  storageClassName: efs-sc
  csi:
    driver: efs.csi.aws.com
    volumeHandle: fs-4ae75172
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: efs-pvc
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: efs-sc
  resources:
    requests:
      storage: 5Gi
---
apiVersion: v1
kind: Service
metadata:
  name: users-service
spec:
  selector:
    app: users
  type: LoadBalancer
  ports:
    - protocol: TCP
      port: 80 # external port
      targetPort: 3000 # Internal port
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: users-deployment
spec:
  replicas: 2
  selector:
    matchLabels:
      app: users
  template:
    metadata:
      labels:
        app: users
    spec:
      containers:
        - name: users-api
          image: xiaozhoucui/kub-dep-users:latest
          env:
            - name: MONGODB_CONNECTION_URI
              valueFrom: # use value from env.yaml 
                configMapKeyRef:
                  name: db-uri-env
                  key: uri
            - name: AUTH_API_ADDRESS
              value: "auth-service.default:3000" # auto generated domain name
          volumeMounts: # at last, connect efs-sc, efs-pv and efs-pvc to container
            - name: efs-vol
              mountPath: /app/users
      volumes: # connect efs-sc, efs-pv and efs-pvc to pod
        - name: efs-vol
          persistentVolumeClaim:
            claimName: efs-pvc
